# Docker Compose 生产环境配置
version: '3.8'

services:
  # 前端应用
  app:
    build: .
    container_name: sdszk-app
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - uploads:/app/server/uploads
    networks:
      - sdszk-network

  # MongoDB 数据库
  mongodb:
    image: mongo:6.0
    container_name: sdszk-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=sdszk
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - sdszk-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: sdszk-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - sdszk-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: sdszk-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - sdszk-network

volumes:
  mongodb_data:
  redis_data:
  uploads:

networks:
  sdszk-network:
    driver: bridge
